/* MIXINS
============================== */

/* PX to REM function
******************************/
@function px-rem($px) {
  @return ($px / 16px) * 1rem;
}

/* Font size and line height
******************************/
@mixin font-size($fs: $font-size, $lh: false) {
  //fs: $fs; /* Fallback in px */
  font-size: px-rem($fs);

  @if $lh != false {
    line-height: ($lh / $fs);
  }
}

/* Image width
******************************/
@mixin img($width: false, $display: block, $max-width: 100%, $height: auto) {
  display: $display;
  max-width: $max-width;
  height: $height;

  @if $width != false {
    width: $width;
  }
}

/* Clearfix
******************************/
@mixin clearfix {
  &::before,
  &::after {
    content: "";

    display: table;
  }

  &::after {
    clear: both;
  }
}

/* Visually hidden element
******************************/
@mixin visually-hidden {
  position: absolute;

  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;

  white-space: nowrap;

  border: 0;

  clip: rect(0 0 0 0);
}

/* Reset list
******************************/
@mixin reset-list {
  margin-left: 0;
  padding-left: 0;

  list-style: none;
}

/* Circle
******************************/
@mixin circle($size, $color) {
  width: $size;
  height: $size;

  background-color: $color;
  border-radius: $size/2;
}

/* Centering flex element
******************************/
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Centering absolute element
******************************/
@mixin absolute-center($horizontal: true, $vertical: true) {
  position: absolute;

  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%);
  }

  @else if ($horizontal) {
    left: 50%;

    transform: translate(-50%, 0);
  }

  @else if ($vertical) {
    top: 50%;

    transform: translate(0, -50%);
  }
}

/* Inline-block
******************************/
@mixin inline-block($value: top) {
  display: inline-block;

  vertical-align: $value;
}

/* Pseudo element
******************************/
@mixin pseudo(
  $display: block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  position: $pos;

  display: $display;
}

/* CSS triangle
******************************/
@mixin css-triangle(
  $color,
  $direction,
  $size: 6px,
  $position: absolute,
  $round: false
) {
  @include pseudo($pos: $position);

  width: 0;
  height: 0;

  @if $round {
    border-radius: 3px;
  }

  @if $direction == down {
    margin-top: 0 - round($size / 2.5);

    border-top: $size solid $color;
    border-right: $size solid transparent;
    border-left: $size solid transparent;
  }

  @else if $direction == up {
    margin-bottom: 0 - round($size / 2.5);

    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }

  @else if $direction == right {
    margin-right: -$size;

    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }

  @else if  $direction == left {
    margin-left: -$size;

    border-top: $size solid transparent;
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  }
}

/* Creates an inner box-shadow for only one side
******************************/
@mixin inner-side-shadow(
  $side: bottom,
  $size: 20px,
  $color: rgba($black, 0.25)
) {

  $helper: round($size * 0.65);

  @if ($side == top) {
    box-shadow: inset 0 $helper $size (-1)*$helper $color;
  }
  @else if ($side == left) {
    box-shadow: inset $helper 0 $size (-1)*$helper $color;
  }
  @else if ($side == right) {
    box-shadow: inset (-1)*$helper 0 $size (-1)*$helper $color;
  }
  @else if ($side == bottom) {
    box-shadow: inset 0 (-1)*$helper $size (-1)*$helper $color;
  }
}

/* Media queries
******************************/
@mixin xl {

  @media screen and (max-width: #{$screen-xl}) {
    @content;
  }
} // Extra large devices

@mixin lg {

  @media screen and (max-width: #{$screen-lg}) {
    @content;
  }
} // Large devices

@mixin md {

  @media screen and (max-width: #{$screen-md}) {
    @content;
  }
} // Medium devices

@mixin sm {

  @media screen and (max-width: #{$screen-sm}) {
    @content;
  }
} // Small devices

@mixin xs {

  @media screen and (max-width: #{$screen-xs}) {
    @content;
  }
} // Tiny devices

@mixin retina {

  @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
    @content;
  }
} // retina 1.5x devices

/* Container for media queries
******************************/
@mixin container($screen: xs) {
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @if $screen == xs {
    max-width: $container-xs;
    padding-right: $container-indent-xs;
    padding-left: $container-indent-xs;
  }

  @else if $screen == sm {
    max-width: $container-sm;
    padding-right: $container-indent-sm;
    padding-left: $container-indent-sm;
  }

  @else if $screen == md {
    max-width: $container-md;
    padding-right: $container-indent-md;
    padding-left: $container-indent-md;
  }

  @else if $screen == lg {
    max-width: $container-lg;
    padding-right: $container-indent-lg;
    padding-left: $container-indent-lg;
  }

  @else if $screen == xl {
    max-width: $container-xl;
    padding-right: $container-indent-xl;
    padding-left: $container-indent-xl;
  }

  @else if $screen == xxl {
    max-width: $container-xxl;
    padding-right: $container-indent-xxl;
    padding-left: $container-indent-xxl;
  }
}

/* Form mixins
******************************/
@mixin field-text {
  display: inline-block;
  width: 100%;
  min-height: calc(#{$line-height}em + #{$field-padding-vertical} + #{$field-padding-vertical} + 2px); // For IE
  margin: 0;
  padding: $field-padding-vertical  $field-padding-horizontal;

  font-size: 1em;
  line-height: $line-height;
  font-family: inherit;
  vertical-align: middle;

  background-color: #fff;
  border: 1px solid $border-color;
  border-radius: $border-radius;

  &:focus {
    @include field-focus;
  }

  &[disabled],
  &[readonly] {
    background-color: $gray-lighter;
    cursor: not-allowed;
  }

  &::-webkit-search-cancel-button,
  &::-webkit-search-decoration,
  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none; // stylelint-disable-line  property-no-vendor-prefix
  }

  &[type="color"] {
    padding: 0;
  }

  &::placeholder {
    color: $text-color-muted;

    opacity: 1;
  }
}


@mixin field-help-text {
  display: block;
  padding-top: 0.4em;

  font-size: $font-size-sm;
  line-height: 1.2em;
  color: $text-color-muted;

  &:empty {
    // stylelint-disable-line
    display: none;
  }
}


@mixin field-focus {
  outline: 0;
  box-shadow: 0 0 0 2px rgba($color-main, $opacity);
}


@mixin field-name {
  display: block;
  margin-bottom: 0.4em;

  font-weight: 700;
  line-height: $line-height;
}
